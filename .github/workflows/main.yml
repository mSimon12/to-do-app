name: Go

env:
  SERVICE_NAME: api
  PROJECT_ID: to-do-app
  DOCKER_IMAGE_URL: api-340@to-do-app-453717.iam.gserviceaccount.com

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24.x' ]
    defaults:
      run:
          working-directory: ./api/src

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - name: Install dependencies
        run: go get .
      - name: Build
        run: go build -v ./...

  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.24.x' ]
    defaults:
      run:
          working-directory: ./api/src

    steps:
      - uses: actions/checkout@v4
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Display Go version
        run: go version
      - name: Install dependencies
        run: go get .
      - name: Test with Go
        run: |
          go test -coverprofile coverage.out ./...
          go tool cover -html=coverage.out -o coverage-${{ matrix.go-version }}.html
      - name: Upload Go test results
        uses: actions/upload-artifact@v4
        with:
          name: Go-results-${{ matrix.go-version }}
          path: coverage-${{ matrix.go-version }}.html

  dockerize-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ env.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Check env access
        run: echo ${{ env.POSTGRES_DB }}

      # - name: Configure Docker
      #   run: |
      #     gcloud auth configure-docker us-central1-docker.pkg.dev

      # - name: Build and Push Docker Image
      #   run: |
      #     docker build -t ${{ env.DOCKER_IMAGE_URL }}:latest -f Dockerfile.prod .
      #     docker push ${{ env.DOCKER_IMAGE_URL }}:latest

      # - name: Deploy to Cloud Run
      #   run: |
      #     echo SERVICE_NAME $SERVICE_NAME
      #     gcloud run deploy $SERVICE_NAME \
      #       --image ${{ env.DOCKER_IMAGE_URL }}:latest \
      #       --platform managed \
      #       --region us-east1 \
      #       --allow-unauthenticated